unit TestDictEditFrm;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, SysUtils, Dictionary, Windows, DictEditFrm, StdCtrls, BaseForm, 
  TntWindows, Messages, TntExtCtrls, ExtCtrls, Menus, Controls, Classes, Dialogs, TntActnList, 
  Forms, TntMenus, TntStdCtrls, ActnList, Graphics;
type
  // Test methods for class TfrmDictEdit
  
  TestTfrmDictEdit = class(TTestCase)
  strict private
    FfrmDictEdit: TfrmDictEdit;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestcbOriginalChange;
    procedure TestalDictEditUpdate;
    procedure TestacAddOriginalExecute;
    procedure TestacRemoveOriginalExecute;
    procedure TestacAddTranslationExecute;
    procedure TestacRemoveTranslationExecute;
    procedure TestlbTranslationsClick;
    procedure TestcbFilterChange;
    procedure TestlbTranslationsDblClick;
    procedure TestlbTranslationsDrawItem;
    procedure TestacMakeDefaultExecute;
    procedure TestEdit;
  end;

implementation

procedure TestTfrmDictEdit.SetUp;
begin
  FfrmDictEdit := TfrmDictEdit.Create(nil);
end;

procedure TestTfrmDictEdit.TearDown;
begin
  FfrmDictEdit.Free;
  FfrmDictEdit := nil;
end;

procedure TestTfrmDictEdit.TestcbOriginalChange;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.cbOriginalChange(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestalDictEditUpdate;
var
  Handled: Boolean;
  Action: TBasicAction;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.alDictEditUpdate(Action, Handled);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestacAddOriginalExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.acAddOriginalExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestacRemoveOriginalExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.acRemoveOriginalExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestacAddTranslationExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.acAddTranslationExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestacRemoveTranslationExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.acRemoveTranslationExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestlbTranslationsClick;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.lbTranslationsClick(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestcbFilterChange;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.cbFilterChange(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestlbTranslationsDblClick;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.lbTranslationsDblClick(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestlbTranslationsDrawItem;
var
  State: TOwnerDrawState;
  Rect: TRect;
  Index: Integer;
  Control: TWinControl;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.lbTranslationsDrawItem(Control, Index, Rect, State);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestacMakeDefaultExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmDictEdit.acMakeDefaultExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmDictEdit.TestEdit;
var
  ReturnValue: Boolean;
  Items: TDictionaryItems;
begin
  // TODO: Setup method call parameters
  ReturnValue := FfrmDictEdit.Edit(Items);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmDictEdit.Suite);
end.

