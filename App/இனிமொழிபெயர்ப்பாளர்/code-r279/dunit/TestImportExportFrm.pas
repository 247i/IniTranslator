unit TestImportExportFrm;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, TntActnList, SysUtils, ComCtrls, Windows, TransIntf, StdCtrls, BaseForm, 
  Messages, ActnList, TranslateFile, Controls, Classes, ImportExportFrm, TntComCtrls, 
  WideIniFiles, Forms, TntStdCtrls, Dialogs, Graphics;
type
  // Test methods for class TfrmImportExport
  
  TestTfrmImportExport = class(TTestCase)
  strict private
    FfrmImportExport: TfrmImportExport;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestlvItemsDblClick;
    procedure TestacImportExportUpdate;
    procedure TestlvItemsEnter;
    procedure TestacImportExecute;
    procedure TestacExportExecute;
    procedure TestacConfigureExecute;
    procedure TestFormShow;
    procedure TestGetStrings;
    procedure TestEdit;
  end;

implementation

procedure TestTfrmImportExport.SetUp;
begin
  FfrmImportExport := TfrmImportExport.Create(nil);
end;

procedure TestTfrmImportExport.TearDown;
begin
  FfrmImportExport.Free;
  FfrmImportExport := nil;
end;

procedure TestTfrmImportExport.TestlvItemsDblClick;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.lvItemsDblClick(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestacImportExportUpdate;
var
  Handled: Boolean;
  Action: TBasicAction;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.acImportExportUpdate(Action, Handled);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestlvItemsEnter;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.lvItemsEnter(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestacImportExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.acImportExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestacExportExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.acExportExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestacConfigureExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.acConfigureExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestFormShow;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.FormShow(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestGetStrings;
var
  ini: TWideCustomIniFile;
  PluginFolder: WideString;
begin
  // TODO: Setup method call parameters
  FfrmImportExport.GetStrings(PluginFolder, ini);
  // TODO: Validate method results
end;

procedure TestTfrmImportExport.TestEdit;
var
  ReturnValue: Boolean;
  CapabilitesSupported: Integer;
  ItemIndex: Integer;
  DoImport: Boolean;
  PluginFolder: WideString;
  Orphans: ITranslationItems;
  Items: ITranslationItems;
begin
  // TODO: Setup method call parameters
  ReturnValue := FfrmImportExport.Edit(Items, Orphans, PluginFolder, DoImport, 
      ItemIndex, CapabilitesSupported);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmImportExport.Suite);
end.

