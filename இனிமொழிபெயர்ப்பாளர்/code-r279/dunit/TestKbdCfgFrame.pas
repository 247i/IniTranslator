unit TestKbdCfgFrame;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, TntForms, TntComCtrls, ActnList, SysUtils, ComCtrls, Windows, StdCtrls, 
  Messages, ShortCutEdit, ExtCtrls, Controls, Classes, KbdCfgFrame, TntClasses, TntActnList, 
  Forms, TntStdCtrls, Dialogs, Graphics, TntControls;
type
  // Test methods for class TFrmKbdCfg
  
  TestTFrmKbdCfg = class(TTestCase)
  strict private
    FFrmKbdCfg: TFrmKbdCfg;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestacAddExecute;
    procedure TestacRemoveExecute;
    procedure TestalMainUpdate;
    procedure TestbtnCloseClick;
    procedure TestlbCategoriesClick;
    procedure TestacResetExecute;
    procedure TestacCloseExecute;
    procedure TestlvCommandsSelectItem;
    procedure TestlvCommandsEnter;
    procedure TestlvCommandsChange;
    procedure TestlbCategoriesEnter;
    procedure TestedShortCutChange;
    procedure TestEditShortCuts;
    procedure TestAdjustControls;
  end;

implementation

procedure TestTFrmKbdCfg.SetUp;
begin
  FFrmKbdCfg := TFrmKbdCfg.Create(nil);
end;

procedure TestTFrmKbdCfg.TearDown;
begin
  FFrmKbdCfg.Free;
  FFrmKbdCfg := nil;
end;

procedure TestTFrmKbdCfg.TestacAddExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.acAddExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestacRemoveExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.acRemoveExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestalMainUpdate;
var
  Handled: Boolean;
  Action: TBasicAction;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.alMainUpdate(Action, Handled);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestbtnCloseClick;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.btnCloseClick(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestlbCategoriesClick;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.lbCategoriesClick(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestacResetExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.acResetExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestacCloseExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.acCloseExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestlvCommandsSelectItem;
var
  Selected: Boolean;
  Item: TListItem;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.lvCommandsSelectItem(Sender, Item, Selected);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestlvCommandsEnter;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.lvCommandsEnter(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestlvCommandsChange;
var
  Change: TItemChange;
  Item: TListItem;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.lvCommandsChange(Sender, Item, Change);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestlbCategoriesEnter;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.lbCategoriesEnter(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestedShortCutChange;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.edShortCutChange(Sender);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestEditShortCuts;
var
  AActionList: TTntActionList;
begin
  // TODO: Setup method call parameters
  FFrmKbdCfg.EditShortCuts(AActionList);
  // TODO: Validate method results
end;

procedure TestTFrmKbdCfg.TestAdjustControls;
begin
  FFrmKbdCfg.AdjustControls;
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTFrmKbdCfg.Suite);
end.

